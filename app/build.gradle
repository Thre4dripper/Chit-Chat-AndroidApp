plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
}

android {
    compileSdk 36
    namespace 'com.example.chitchatapp'

    defaultConfig {
        applicationId "com.example.chitchatapp"
        minSdk 28
        targetSdk 36
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def variantName = variant.name
            if (output.outputFileName != null && output.outputFileName.toString().endsWith('.apk')) {
                output.outputFileName = "app-${variantName}.apk"
            }
        }
    }

    signingConfigs {
        release {
            def localProps = new Properties()
            def localPropsFile = rootProject.file("local.properties")
            if (localPropsFile.exists()) {
                localProps.load(localPropsFile.newDataInputStream())
            }

            def getEnvOrLocalProp = { key ->
                System.getenv(key) ?: localProps.getProperty(key)
            }

            def keystorePath = getEnvOrLocalProp("RELEASE_KEYSTORE_PATH") ?: file("./keystore.jks")
            if (keystorePath != null) {
                storeFile file(keystorePath)
                storePassword getEnvOrLocalProp("RELEASE_STORE_PASSWORD")
                keyAlias getEnvOrLocalProp("RELEASE_KEY_ALIAS")
                keyPassword getEnvOrLocalProp("RELEASE_KEY_PASSWORD")
            } else {
                println("⚠️ RELEASE_KEYSTORE_PATH is missing — skipping release signing")
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding true
    }

    buildToolsVersion '36.0.0'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:33.16.0')

    //firebase auth ui
    implementation 'com.firebaseui:firebase-ui-auth:9.0.0'

    //firebase auth
    implementation 'com.google.firebase:firebase-auth-ktx'

    //firebase storage
    implementation 'com.google.firebase:firebase-storage-ktx'

    //firebase firestore
    implementation("com.google.firebase:firebase-firestore-ktx")

    //firebase messaging
    implementation 'com.google.firebase:firebase-messaging-ktx:24.1.2'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    //uCrop library
    implementation 'com.github.yalantis:ucrop:2.2.10'

    //lottie
    implementation 'com.airbnb.android:lottie:6.6.7'

    //zoomable image view
    implementation "com.github.MikeOrtiz:TouchImageView:3.7.1"

    //volley library
    implementation 'com.android.volley:volley:1.2.1'
}